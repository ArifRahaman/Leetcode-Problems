class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        //     int n=matrix.length;
        // int m=matrix[0].length;
        // int start=0;
        // int end=n*m-1;
        // while(start<=end){
        //     int mid=start+(end-start)/2;
        //     int midelt=matrix[mid/m][mid%m];
        //     if(midelt==target){
        //         return true;
        //     }if(target<midelt){
        //         end=mid-1;
        //     }else{
        //         start=mid+1;
        //     }
        // }
        // return false;
        int n=matrix.length;
        int m=matrix[0].length;
        int start=0;
        int end=n*m-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            int middlelement=matrix[mid/m][mid%m];
        
        if(target<middlelement){
            end=mid-1;
       }else if(target==middlelement){
            return true;
        }else{
            start=mid+1;
        }

    }
                return false;
}
}
