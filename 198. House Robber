class Solution {
    public int rob(int[] arr) {
//         int n=arr.length;
//         int sumOdd=0;
//         int sumEven=0;
//         for(int i=0;i<arr.length/2;i++){
//             sumOdd=sumOdd+arr[2*i+1]; 
//         }if(n%2==0){
//             for(int j=0;j<arr.length/2;j++){
//                 sumEven=sumEven+arr[2*j];
//             }
//         }else{
//             for(int k=0;k<=arr.length/2;k++){
//             sumEven=sumEven+arr[2*k];
//         }
//         }
//         if(sumEven>=sumOdd){
//             return sumEven;
//         }
//         else{
//             return sumOdd;

//         }
        
        
        return solvedp(arr);
}
    static int solvedp(int[]nums){
               int n = nums.length;
        if (n == 0) {
            return 0;
        } else if (n == 1) {
            return nums[0];
        }

        int[] dp = new int[n];
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0], nums[1]);

        for (int i = 2; i < n; i++) {
            int include = dp[i - 2] + nums[i];
            int exclude = dp[i - 1];
            dp[i] = Math.max(include, exclude);
        }
         return  dp[n - 1];
 }
}

    



