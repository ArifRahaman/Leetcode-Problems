class Solution {
    public long minSum(int[] nums1, int[] nums2) {
        // 2 0 1 0 1 4
        // 0 0 // 0 0
//6 5 0 0 0        //3 2 0 0 1 0=6   
        long count1=0;
        long sum1=0;
        long count2=0;
        long sum2=0;
        for(int i=0;i<nums1.length;i++){
            if(nums1[i]==0)
            count1++;
            sum1+=nums1[i];
        }
        for(int i=0;i<nums2.length;i++){
            if(nums2[i]==0)
            count2++;
            sum2+=nums2[i];
        }
        if(count2==0 && count1!=0){
            if(sum1+count1>sum2){
                return -1;
            }
            else 
                return sum2;
        }
        if(count1==0 && count2==0 && sum1!=sum2){
            return -1;
        }
        if(count1==0 && count2==0 && sum1==sum2){
            return sum1;
        }
        if(count1==0 && count2!=0){
            if(sum2+count2>sum1){
                return -1;
            }
            else 
               return sum1;
        }
        long ans=0;
 
        int finalAnswer=0;
        ans=Math.min((sum1+count1),(sum2+count2));
    
        if(ans==sum1+count1){
            return sum2+count2;
        }
        return sum1+count1;
//         if(ans==sum2){
//             finalAnswer=sum1+count1;
//           reserve1 =finalAnswer-sum1;
//         another1=reserve1-sum2;
//             return another1+count2;
            
//           }     
//              if(ans==sum1){
//             finalAnswer=sum2+count2;
//                  Sustem.out.println(finalAnswer);
//             //12
//           reserve1 =finalAnswer-sum1;
//           //6
//             another1=reserve1-sum1;
//             //6     
//             return Math;
            
//           } 
//         return -1;
    }
}
